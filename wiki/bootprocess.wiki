#Aphrodite-OS booting process.

==== Source file ====
 * boot/include/protect.inc
Constant and macro definitions used in protect mode.
 * boot/include/load.inc
Physical address of loader and kernel image file.
Physical address of kernel entry point.
Physical base address of page directory and page table.
 * boot/include/lib32.inc
Some display and memory copy functions.
 * boot/include/fat12hdr.inc
FAT12 file system definitions.
 * boot/boot_loader.asm
MBR used to load loader into memory.
 * boot/loader.asm
Checking total memroy size, load kernel into memory, enable protect mode, set page directory and table of the kernel, copy kernel code into KERNEL_ENTRYPOINT_PHY_ADDR defined in load.inc, then jump to kernel.

==== Boot process ====
boot_loader.asm ==> boot.bin ==> MBR of floopy disk
loader.asm ==> loader.bin ==> Loader of aphrodite-os

boot.bin will find loader.bin in the root directory of floopy disk. After found, it will load loader.bin into LOADER_BASE:LOADER_OFFSET defined in load.inc.

loader.bin will first get a memory map by INT 15H. Then load kernel.bin into KERENEL_BASE:KERNEL_OFFSET defined in load.inc. After finish loading kernel image, loader.bin will enable protect mode, set page directory and table of the kernel, copy kernel code into KERNEL_ENTRYPOINT_PHY_ADDR defined in load.inc, then jump to kernel.