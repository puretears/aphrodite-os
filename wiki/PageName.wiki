#summary One-sentence summary of this page.

= Physical memory of aphrodite os =

The whole physical memory of aphrodite os is divided into three parts:

LOW_MEMORY: 0 - 1MB

CACHE: 1 - 4MB

MAIN MEMORY: 4 - 16MB

Both cache and main memory are managed by paging system. 

We need `15 * 1024 / 4096 = 3840` page tables to cover cache and main memory.

We use a global byte array to represent physical page status.

{{{
unsigned char mem_map[PAGING_PAGES] = {0, };
}}}

0 for idle pages, 100 for used pages.

Given a physical address, we use `man_nr` to get the corresponding `mem_map` index.

{{{
inline unsigned int map_nr(unsigned int paddr) {
    return ((addr - LOW_MEMORY) >> 12);
}
}}}

= Interfaces =

*Prototype*
{{{
void free_page(unsigned int paddr)
}}}

*Perameter*

paddr - physical address of the page frame

*Prototype*
{{{
void free_page_tables(unsigned int laddr, unsigned size)
}}}

*Perameter*

laddr - Linear address to be released from.
size - The number of bytes to be released.